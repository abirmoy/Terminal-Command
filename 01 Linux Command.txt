'''
Shell: Text interface, the Command Line is a program called Shell; Bash Shell
command [options…] [arguments…]
-> Argument: An argument can be used to specify something for the command to act upon.
ex. ls Picture; Picture is an argument.
-> Options can be used to alter the behavior of a command.
ex. ls -a; -a is a option
'''

### OPTIONS ###
-t 			# will sort the files by timestamp ex. $ls -lt== $ls -l -t
-S 			# will sort the files by file size
-r 			# will reverse the order of any type of sort





echo Hello world						# print string in the terminal
ls > /path/to/file/filename					# save something as text




### PROCESS ###

watch free -h							# check performance
service <name of the app> <start, stop, restart, status>	# i.e service ssh start
service --status-all						# list of runing services
ps aux								# all process list
ps -e								# every process
killall <program_name>						# i.e $killall firefox; killes all firefox process
kill <pid>							# killes process

### CRONJOB ###
ps -ax|grep cron						# cronjobs process list
crontab -l							# lists cronjobs





### VIM COMMAND ###

:wq                                 # to save and exit
:q!                                 # to trash all changes
SHIFT I                             # to insert
SHIFT Q                             # to quit
i                                   # set to insert mode
esc                                 # escape from insert mode
set number                          # shows line number
<n>dd                               # delete line in command mode; n = lumber of line if given
u                                   # undo
clt+r                               # redo
/<string>                           # search string; hin n for next match N for previous
%s/<search>/<replace>/gc            # replace string
%s/<search>/<replace>/g             # replace string with out confirmation prompt








### LINUX COMMAND ###

<anything> --help                               # for help
whatis <name of a command>                      # i.e $whatis pwd will show information about the command pwd
history                                         # prints the 1000 unique command history
locate <name>                                   # locate files 
shutdown [OPTION]... TIME [MESSAGE]		# e.g sudo shutdown -h +3; The system is going DOWN for system halt in 3 minutes!
sudo shutdown -h now				# shutdown immediately
shutdown                                        # shutdown after 1 minute
shutdown -c                                     # cancle shutdown
sudo reboot					# reboot

# DIRECTORY & FILE #
touch <file name>                               # i.e $touch test.sh creates a file name test.sh
cd                                              # change directory
mkdir [directory name]				# make directory
pwd                                             # present working directory
ls                                              # list of files and folders
ls -a                                           # list along with hidden files
ls -all                                         # list along with permission type
ls -lh						# list of files and folders with size in K,M,G (default is byte)
cat [options] filename				# view file not recommended for large file
head [options] filename				# head of a file ex. 
head -n numberOfLine filename			# head -n 5 filename.txt
tail [options] filename				# last n number of line





# CUT COPY RENAME #
cp source/directory/filename destinanion/directory	# copy file ex. cp /usr/bin/octave/3.2.4/m/miscellaneous/mkoctfile.m /usr/bin/mkoctfile-3.2.4
mv source/directory/filename destinanion/directory	# cut move file and rename





# DELETE FILE FOLDERS #
-r : Remove directories and their contents recursively
-f : Force option i.e. ignore nonexistent files and arguments, never prompt
-v : Verbose option
rm /home/vivek/data/*                           	# To delete all files in a directory named /home/vivek/data/
rm -v /home/vivek/data/*                        	# To see what is being done when deliting
rmdir <directory name>                          	# i.e $rmdir abir deletes abir
rm -rfv /home/vivek/data/                       	# deletes all files folders from a directory


# FILE FOLDERS AND NEVIGATION #
file filename.txt					# determines file type
stat fileName.txt					# display ownership modification information etc.


# CHANGE PERMISSION  OWNERSHIP #
...
sudo chmod [<SET><ACTION><PERMISSIONS>]... FILE
sudo chown [OPTIONS] [OWNER] FILE 
SET
Symbol	Meaning
u	User: The user who owns the file.
g	Group: The group who owns the file.
o	Others: Anyone other than the user owner or member of the group owner.
ACTION
a	All: Refers to the user, group and others.
+	Add the permission, if necessary
=	Specify the exact permission
-	Remove the permission, if necessary
PERMISSION
r	read
w	write
x	execute
...





# ADD DELETE SWITCHING USER-ROOT #
lsb_release -a					# destro version details
lsb_release -cs					# name of Ubuntu distribution
whoami                                          # check current username
uname                                           # destro name
uname -a                                        # details of destro and kernel;
sudo adduser <username>				# add user
sudo adduser <username> sudo			# add user sudo permission
sudo userdel -r <username>			# delete user
sudo usermod -l newUsername oldUsername		# change username
sudo usermod -d /home/newHomeDir -m newUsername	# change home-folder
su - <username>                                 # switch to another user i.e $su - user2
sudo -i                                         # switch to <root@linlin-mintOS#> $pwd ->root
sudo -s                                         # switch to <root@linlin-mintOS#> $pwd ->/home/linlin
sudo -k						# giveup sudo privilege
sudo sh                                         # login as root switches to <#> $pwd ->/home/linlin
sudo su <username>                              # i.e $sudo su linlin; switch back to othruser $exit, $logout also works
$ exit                                          # exit from root
$ logout                                        # logout of root  
$ passwd					# change password
$ passwd -S					# password status information
sudo passwd <username> -d			# remove a user's password		




# UPDATE #
apt-get update
apt-get remove
sudo apt update & sudo apt upgrade              	# update package manager
apt list --upgradable					# see upgradeable list
sudo apt full-upgrade					#upgrade the system by removing/installing/upgrading packages
apt list --upgradable					# check upgradable package
# INSTALL #
which <name of the package>                     	# check if package is installed
apt search <name of the package>                	# i.e $apt search firefox (better than apt-cache)
sudo apt-cache search <name of the package>     	# i.e $sudo apt-cache search firefox
sudo apt install <name of the package>			# install packages
sudo apt reinstall <name of the package>		# reinstallpackages
# UNINSTALL #
sudo apt remove <name of the package>           	# i.e $sudo apt remove firefox

# LIST OF INSTALLED SOFTWARE #
dpkg -l				# Aptitude-based distributions (Ubuntu, Debian, etc)
rpm -qa				# RPM-based distributions (Fedora, RHEL, etc)
pkg_info			# pkg*-based distributions (OpenBSD, FreeBSD, etc)
equery list or eix -I		# Portage-based distributions (Gentoo, etc)
pacman -Q			# pacman-based distributions (Arch Linux, etc)




### NETWORKING ###
ifconfig                                        # ip related information, sudo apt install net-tools --> if $ifconfig command not found
hostname -I					# IP address
ping -c #ofTimeTo ping IP			# ex $ping -c 4 192.168.1.2










### SHORTCUT ###

clt+alt+t                                       	# open new terminal window
shift+clt+'+/-'						# Zoomin Zoomout  
clt+l                                           	# clear terminal
clt+d                                           	# close the terminal
clt+c                                           	# get out of any continous process in the terminal
clt+alt+↑						# maximize window fullscreen













### How to install SSH server in Ubuntu ###
https://www.cyberciti.biz/faq/ubuntu-linux-install-openssh-server/#:~:text=Enable%20the%20ssh%20service%20by,typing%20sudo%20systemctl%20start%20ssh

The procedure to install a ssh server in Ubuntu Linux is as follows:

Open the terminal application for Ubuntu desktop.
For remote Ubuntu server you must use BMC or KVM or IPMI tool to get console access
1.Type 
$sudo apt-get install openssh-server

2.Enable the ssh service by typing 
$sudo systemctl enable ssh

3.Start the ssh service by typing 
$sudo systemctl start ssh

4.Test it by login into the system using 
$ssh user@server-name


### PYTHON ###
sudo apt install python3-pip				# enabling pip






































### LINUX AS WINDOWS SUBSYSTEM ###

1.
Run the command bellow on Powershell as administrator

Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux

2.
Goto to the page bellow to download appropriate destro
https://docs.microsoft.com/en-us/windows/wsl/install-manual

### SETTING UP PUTTY ###
1.
sudo apt-get install openssh-server   # Switch to bridged networking mode, make that change in the Virtual Machine Control Panel (Edit > Virtual Machine Settings)

2. START SSH
service ssh start

3. CHECK IP & COPY IP
ifconfig


### CONNECT TO LINUX FROM CMD ###
1. Open cmd and type
ssh <username>@<ip>                   # ie. ssh abc@168.xxx.xxx.xxx 





### SETTING UP REMOTE DESKTOP WINDOWS-->UBUNTU ###

1.
sudo apt install xrdp
2.
sudo systemctl enable xrdp
3.
Open Remote Desktop in Windows Enter IP of followed by Username and Password of Ubuntu























































































